import { Bill, TypeBill } from '../../types/bill'; // –ù–µ –∑–∞–±—É–¥—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å TypeBill
import {
  Modal,
  Button,
  TextInput,
  ColorInput,
  Select,
  NumberInput,
} from '@mantine/core';
import { useEffect, useState } from 'react';

interface AddBillModalProps {
  opened: boolean;
  onClose: () => void;
  onSave: (bill: Omit<Bill, 'id'> | Bill) => void;
  initialData?: Bill | null;
}

// üîÅ –ò–º–∏—Ç–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ —Ç–∏–ø–æ–≤ —Å—á—ë—Ç–∞ ‚Äî –≤ –±—É–¥—É—â–µ–º —ç—Ç–æ –ª—É—á—à–µ –≤—ã–Ω–µ—Å—Ç–∏ –≤ constants.ts –∏–ª–∏ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Å API
const TYPE_BILL_OPTIONS: TypeBill[] = [
  { id: 3, name: '–û–±—â–∏–π', img: '' },
  { id: 4, name: '–ù–∞–ª–∏—á–Ω—ã–µ', img: '' },
  { id: 5, name: '–¢–µ–∫—É—â–∏–π —Å—á—ë—Ç', img: '' },
  { id: 6, name: '–ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞', img: '' },
  { id: 7, name: '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏', img: '' },
  { id: 8, name: '–ó–∞–µ–º', img: '' },
  { id: 9, name: '–ò–ø–æ—Ç–µ–∫–∞', img: '' },
  { id: 10, name: '–°–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã–π —Å—á—ë—Ç', img: '' },
];

export default function AddBillModal({ opened, onClose, onSave, initialData }: AddBillModalProps) {
  const [title, setTitle] = useState('');
  const [color, setColor] = useState('#339af0');
  const [typeBillId, setTypeBillId] = useState<number | null>(null);
  const [amount, setAmount] = useState(0);
  const [currency, setCurrency] = useState('RUB');

  useEffect(() => {
    if (initialData) {
      setTitle(initialData.title);
      setColor(initialData.color);
      setTypeBillId(initialData.type_bill.id); // üí° –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ ID
      setAmount(initialData.amount);
      setCurrency(initialData.currency);
    } else {
      resetForm();
    }
  }, [initialData, opened]);

  const resetForm = () => {
    setTitle('');
    setColor('#339af0');
    setTypeBillId(null);
    setAmount(0);
    setCurrency('RUB');
  };

  const handleSubmit = () => {
    if (title && color && typeBillId !== null && currency) {
      const selectedType = TYPE_BILL_OPTIONS.find(t => t.id === typeBillId);
      if (!selectedType) {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–∏–ø —Å—á—ë—Ç–∞ –ø–æ ID');
        return;
      }

      const bill: Omit<Bill, 'id'> = {
        title,
        amount,
        currency,
        color,
        type_bill: selectedType, // üü¢ –ü–µ—Ä–µ–¥–∞—ë–º –≤–µ—Å—å –æ–±—ä–µ–∫—Ç TypeBill
      };

      if (initialData?.id) {
        onSave({ ...bill, id: initialData.id });
      } else {
        onSave(bill);
      }

      onClose();
      resetForm();
    }
  };

  return (
    <Modal opened={opened} onClose={onClose} title={initialData ? '–ò–∑–º–µ–Ω–∏—Ç—å —Å—á—ë—Ç' : '–î–æ–±–∞–≤–∏—Ç—å —Å—á—ë—Ç'} centered>
      <TextInput
        label="–ù–∞–∑–≤–∞–Ω–∏–µ —Å—á—ë—Ç–∞"
        value={title}
        onChange={(e) => setTitle(e.currentTarget.value)}
        required
      />
      <ColorInput
        label="–¶–≤–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏"
        value={color}
        onChange={setColor}
        required
      />
      <Select
        label="–¢–∏–ø —Å—á—ë—Ç–∞"
        placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø"
        value={typeBillId !== null ? String(typeBillId) : null}
        onChange={(value) => setTypeBillId(value ? Number(value) : null)}
        data={TYPE_BILL_OPTIONS.map(type => ({
          value: String(type.id),
          label: type.name,
        }))}
        required
      />
      <NumberInput
        label="–°—É–º–º–∞ –Ω–∞ —Å—á—ë—Ç–µ"
        value={amount}
        onChange={(value) => setAmount(Number(value) || 0)}
        min={0}
      />
      <Select
        label="–í–∞–ª—é—Ç–∞"
        placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É"
        value={currency}
        onChange={(value) => value && setCurrency(value)}
        data={[
          { value: '‚ÇΩ', label: '‚ÇΩ –†—É–±–ª–∏' },
          { value: '$', label: '$ –î–æ–ª–ª–∞—Ä—ã' },
          { value: '‚Ç¨', label: '‚Ç¨ –ï–≤—Ä–æ' },
        ]}
        required
      />
      <Button fullWidth mt="md" onClick={handleSubmit}>
        {initialData ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'}
      </Button>
    </Modal>
  );
}
